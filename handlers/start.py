"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã start –∏ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from database import Database
from keyboards.inline import get_role_keyboard, get_directions_keyboard
from states import TrainerRegistration
from config import ADMIN_IDS

router = Router()


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    return user_id in ADMIN_IDS


@router.message(CommandStart())
async def cmd_start(message: Message, db: Database, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()
    
    user_id = message.from_user.id
    username = message.from_user.username
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    await db.add_user(user_id, username)
    
    # –ë–∞–∑–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    welcome_text = (
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Tinder –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤!</b>\n"
        "<i>made by <b>@cultphysique</b> </i>\n\n"
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—Å! üí™\n\n"
        "üéÅ <b>–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:</b>\n"
        "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —É <b>–õ–Æ–ë–û–ì–û</b> –Ω–∞—à–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–æ <b>–õ–Æ–ë–û–ú–£</b> –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º—É –≤–∞—Å –≤–æ–ø—Ä–æ—Å—É!\n\n"
    )

    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–∞—Ö
    if is_admin(user_id):
        welcome_text += (
            "üë®‚Äçüíº <b>–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!</b>\n\n"
            "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/admin –∏–ª–∏ /stats - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
        )
    
    welcome_text += "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å:"
    
    await message.answer(
        welcome_text,
        reply_markup=get_role_keyboard()
    )


@router.callback_query(F.data == "role_client")
async def process_client_role(callback: CallbackQuery, db: Database, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    await state.clear()
    
    user_id = callback.from_user.id
    username = callback.from_user.username
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await db.update_user_role(user_id, "client")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞
    existing_client = await db.get_client(user_id)
    if not existing_client:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ —Å 5 –ª–∞–π–∫–∞–º–∏
        await db.create_client(user_id, username, initial_likes=5)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
    likes_count = await db.get_client_likes(user_id)
    
    await callback.message.edit_text(
        f"üë§ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å <b>–∫–ª–∏–µ–Ω—Ç–∞</b>.\n\n"
        f"üíñ –£ –≤–∞—Å <b>{likes_count}</b> –ª–∞–π–∫–æ–≤.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:",
        reply_markup=get_directions_keyboard(prefix="client_direction")
    )
    await callback.answer()


@router.callback_query(F.data == "role_trainer")
async def process_trainer_role(callback: CallbackQuery, db: Database, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ —Ç—Ä–µ–Ω–µ—Ä–∞"""
    user_id = callback.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–Ω–∫–µ—Ç–∞
    existing_trainer = await db.get_trainer_by_user_id(user_id)
    
    if existing_trainer:
        if existing_trainer.status == "pending":
            await callback.message.edit_text(
                "‚è≥ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
            )
        elif existing_trainer.status == "approved":
            await callback.message.edit_text(
                "‚úÖ –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É–∂–µ –æ–¥–æ–±—Ä–µ–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞!\n\n"
                "–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∫–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç—ã –ª–∞–π–∫–∞—é—Ç –≤–∞—à—É –∞–Ω–∫–µ—Ç—É."
            )
        elif existing_trainer.status == "rejected":
            await callback.message.edit_text(
                "‚ùå –í–∞—à–∞ –ø—Ä–µ–¥—ã–¥—É—â–∞—è –∞–Ω–∫–µ—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É.\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:",
                reply_markup=get_directions_keyboard(prefix="trainer_direction")
            )
            await state.set_state(TrainerRegistration.waiting_for_direction)
        await callback.answer()
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await db.update_user_role(user_id, "trainer")
    
    await callback.message.edit_text(
        "üí™ –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–æ–ª—å <b>—Ç—Ä–µ–Ω–µ—Ä–∞</b>.\n\n"
        "–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –≤–∞—à—É –∞–Ω–∫–µ—Ç—É!\n\n"
        "‚ö†Ô∏è <b>–í–ê–ñ–ù–û:</b> –ù–µ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ –∞–Ω–∫–µ—Ç–µ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã (—Ç–µ–ª–µ—Ñ–æ–Ω, email, —Å–æ—Ü—Å–µ—Ç–∏).\n"
        "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã —Å–º–æ–≥—É—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ —á–µ—Ä–µ–∑ Telegram.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:",
        reply_markup=get_directions_keyboard(prefix="trainer_direction")
    )
    await state.set_state(TrainerRegistration.waiting_for_direction)
    await callback.answer()

