"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤"""
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext

from database import Database
from database.models import Trainer
from keyboards.inline import get_skip_photo_keyboard, get_moderation_keyboard
from states import TrainerRegistration
from config import ADMIN_IDS, PLACEMENT_COST

router = Router()


@router.callback_query(
    F.data.startswith("trainer_direction:"),
    TrainerRegistration.waiting_for_direction
)
async def process_trainer_direction(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–Ω–µ—Ä–æ–º"""
    direction = callback.data.split(":", 1)[1]
    
    await state.update_data(direction=direction)
    await state.set_state(TrainerRegistration.waiting_for_name)
    
    await callback.message.edit_text(
        f"–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: <b>{direction}</b>\n\n"
        "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–∏–º—è</b> (–∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å—Å—è –∫–ª–∏–µ–Ω—Ç–∞–º):"
    )
    await callback.answer()


@router.message(TrainerRegistration.waiting_for_name)
async def process_trainer_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏"""
    name = message.text.strip()
    
    if not name or len(name) < 2:
        await message.answer("‚ùå –ò–º—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è:")
        return
    
    if len(name) > 50:
        await message.answer("‚ùå –ò–º—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–∫–æ—Ä–æ—á–µ (–¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤):")
        return
    
    await state.update_data(name=name)
    await state.set_state(TrainerRegistration.waiting_for_age)
    
    await message.answer(
        f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, <b>{name}</b>!\n\n"
        "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à <b>–≤–æ–∑—Ä–∞—Å—Ç</b> (—á–∏—Å–ª–æ):"
    )


@router.message(TrainerRegistration.waiting_for_age)
async def process_trainer_age(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
    try:
        age = int(message.text.strip())
        
        if age < 16 or age > 100:
            await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç 16 –¥–æ 100 –ª–µ—Ç):")
            return
        
        await state.update_data(age=age)
        await state.set_state(TrainerRegistration.waiting_for_experience)
        
        await message.answer(
            "–û—Ç–ª–∏—á–Ω–æ!\n\n"
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º <b>–æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã</b> —Ç—Ä–µ–Ω–µ—Ä–æ–º.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: \"5 –ª–µ—Ç\", \"–ë–æ–ª–µ–µ 10 –ª–µ—Ç\", \"2 –≥–æ–¥–∞ –≤ —Ñ–∏—Ç–Ω–µ—Å–µ\":"
        )
    except ValueError:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º:")


@router.message(TrainerRegistration.waiting_for_experience)
async def process_trainer_experience(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –æ–ø—ã—Ç–∞"""
    experience = message.text.strip()
    
    if not experience or len(experience) < 2:
        await message.answer("‚ùå –û–ø—ã—Ç —É–∫–∞–∑–∞–Ω —Å–ª–∏—à–∫–æ–º –∫—Ä–∞—Ç–∫–æ. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ:")
        return
    
    if len(experience) > 100:
        await message.answer("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤:")
        return
    
    await state.update_data(experience=experience)
    await state.set_state(TrainerRegistration.waiting_for_about)
    
    await message.answer(
        "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!\n\n"
        "–¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ <b>–æ —Å–µ–±–µ</b>:\n"
        "- –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n"
        "- –ú–µ—Ç–æ–¥–∏–∫–∏ —Ä–∞–±–æ—Ç—ã\n"
        "- –ü–æ—á–µ–º—É –∫–ª–∏–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –≤—ã–±—Ä–∞—Ç—å –∏–º–µ–Ω–Ω–æ –≤–∞—Å\n"
        "- –¶–µ–Ω–∞ –∑–∞ –≤–∞—à–∏ —É—Å–ª—É–≥–∏\n"
        "–ú–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤\n"
        "–ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤\n\n"
        "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ù–ï —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏–Ω–∞—á–µ –∞–Ω–∫–µ—Ç–∞ –±—É–¥–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!\n"
        "–° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã."
    )


@router.message(TrainerRegistration.waiting_for_about)
async def process_trainer_about(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ–±–µ"""
    about = message.text.strip()
    
    if not about or len(about) < 20:
        await message.answer(
            "‚ùå –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ (–º–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤).\n"
            "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º —É–∑–Ω–∞—Ç—å –≤–∞—Å –ª—É—á—à–µ!"
        )
        return
    
    if len(about) > 1000:
        await message.answer("‚ùå –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç. –°–æ–∫—Ä–∞—Ç–∏—Ç–µ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤:")
        return
    
    await state.update_data(about=about)
    await state.set_state(TrainerRegistration.waiting_for_photo)
    
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ.\n\n"
        "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ <b>—Ñ–æ—Ç–æ</b> (–∞–Ω–∫–µ—Ç—ã —Å —Ñ–æ—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è).\n\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥:",
        reply_markup=get_skip_photo_keyboard()
    )


@router.message(TrainerRegistration.waiting_for_photo, F.photo)
async def process_trainer_photo(message: Message, bot: Bot, state: FSMContext, db: Database):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ"""
    photo_id = message.photo[-1].file_id
    await state.update_data(photo_id=photo_id)
    
    await submit_trainer_profile(message, bot, state, db)


@router.callback_query(F.data == "skip_photo", TrainerRegistration.waiting_for_photo)
async def process_skip_photo(callback: CallbackQuery, bot: Bot, state: FSMContext, db: Database):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ —Ñ–æ—Ç–æ"""
    await state.update_data(photo_id=None)
    await callback.answer()
    
    # –ü–µ—Ä–µ–¥–∞–µ–º callback.from_user, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞ –Ω–µ –±–æ—Ç–∞
    await submit_trainer_profile(callback.message, bot, state, db, user=callback.from_user)


@router.message(TrainerRegistration.waiting_for_photo)
async def process_invalid_photo(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤–º–µ—Å—Ç–æ —Ñ–æ—Ç–æ"""
    await message.answer(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ'.",
        reply_markup=get_skip_photo_keyboard()
    )


async def submit_trainer_profile(message: Message, bot: Bot, state: FSMContext, db: Database, user=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∫–µ—Ç—ã –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"""
    data = await state.get_data()
    # –ï—Å–ª–∏ user –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –±–µ—Ä–µ–º –∏–∑ message
    if user is None:
        user = message.from_user
    user_id = user.id
    username = user.username
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç—Ä–µ–Ω–µ—Ä–∞
    trainer = Trainer(
        id=None,
        user_id=user_id,
        username=username,
        direction=data['direction'],
        name=data['name'],
        age=data['age'],
        experience=data['experience'],
        about=data['about'],
        photo_id=data.get('photo_id'),
        status='pending',
        created_at=None
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
    trainer_id = await db.create_trainer(trainer)
    
    await state.clear()
    
    await message.answer(
        "‚úÖ <b>–ê–Ω–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!</b>\n\n"
        "–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n"
        "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∞–Ω–∫–µ—Ç–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.\n\n"
        "–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –æ–ø–ª–∞—Ç—ã —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã. \n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è {PLACEMENT_COST} —Ä—É–±–ª–µ–π –≤ –º–µ—Å—è—Ü.\n"
        "–ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏ –æ–ø–ª–∞—Ç—ã –≤—ã –Ω–∞—á–Ω–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ª–∞–π–∫–∞—Ö –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤!"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
    if ADMIN_IDS:
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –ø–æ–ª—è "–û —Å–µ–±–µ"
        base_text = (
            "üÜï <b>–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ —Ç—Ä–µ–Ω–µ—Ä–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</b>\n\n"
            f"<b>–ò–º—è:</b> {trainer.name}\n"
            f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {trainer.age} –ª–µ—Ç\n"
            f"<b>–û–ø—ã—Ç:</b> {trainer.experience}\n"
            f"<b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b> {trainer.direction}\n\n"
            f"<b>–û —Å–µ–±–µ:</b>\n"
            f"<b>Username:</b> @{username if username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"<b>User ID:</b> {user_id}"
        )
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
        max_caption_length = 4096
        available_length = max_caption_length - len(base_text) - 10  # 10 —Å–∏–º–≤–æ–ª–æ–≤ –∑–∞–ø–∞—Å
        
        # –û–±—Ä–µ–∑–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        about_text = trainer.about
        if len(about_text) > available_length:
            about_text = about_text[:available_length] + "..."
        
        admin_text = (
            "üÜï <b>–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ —Ç—Ä–µ–Ω–µ—Ä–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏</b>\n\n"
            f"<b>–ò–º—è:</b> {trainer.name}\n"
            f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {trainer.age} –ª–µ—Ç\n"
            f"<b>–û–ø—ã—Ç:</b> {trainer.experience}\n"
            f"<b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b> {trainer.direction}\n\n"
            f"<b>–û —Å–µ–±–µ:</b>\n{about_text}\n\n"
            f"<b>Username:</b> @{username if username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"<b>User ID:</b> {user_id}"
        )
        
        for admin_id in ADMIN_IDS:
            try:
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–π –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞
                if len(admin_text) > 4096:
                    print(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã {trainer_id} –ø—Ä–µ–≤—ã—à–∞–µ—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤: {len(admin_text)}")
                    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ç–æ
                    await bot.send_message(
                        admin_id,
                        admin_text,
                        reply_markup=get_moderation_keyboard(trainer_id)
                    )
                elif trainer.photo_id:
                    await bot.send_photo(
                        admin_id,
                        photo=trainer.photo_id,
                        caption=admin_text,
                        reply_markup=get_moderation_keyboard(trainer_id)
                    )
                else:
                    await bot.send_message(
                        admin_id,
                        admin_text,
                        reply_markup=get_moderation_keyboard(trainer_id)
                    )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")
                # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å –¥–ª–∏–Ω–æ–π caption, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ç–æ
                try:
                    await bot.send_message(
                        admin_id,
                        admin_text,
                        reply_markup=get_moderation_keyboard(trainer_id)
                    )
                except Exception as e2:
                    print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e2}")

